
#spring:
#  profiles:
#  active: dev


##开发环境
server.port=8088
server.tomcat.uri-encoding=UTF-8


spring.datasource.sdriver.name=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=Wanxiangdai2018
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://bj-cdb-98fxjfrh.sql.tencentcdb.com:63617/iou?characterEncoding=utf-8
spring.datasource.DruidName=admin
spring.datasource.DruidPassword=123456
spring.datasource.initial-size=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters= stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
 # 合并多个DruidDataSource的监控数据
  #useGlobalDataSourceStat: true

mybatis.mapper-locations= classpath:/mappers/*.xml
mybatis.type-aliases-package=com.xjyq.pojo,com.xjyq.bo,com.xjyq.vo


spring.aop.auto=true

# Redis数据库索引（默认为0）
#spring:
#       redis:
#       database: 0
## Redis服务器地址
#       host:
## Redis服务器连接端口
#       port: 6379
## Redis服务器连接密码（默认为空）
#       password:
## 连接池最大连接数（使用负值表示没有限制）
#       pool:
#       max-active: 8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#        max-wait: -1
## 连接池中的最大空闲连接
#        max-idle: 8
## 连接池中的最小空闲连接
#        min-idle: 0
## 连接超时时间（毫秒）
#        timeout: 0

#spring:
#  rabbitmq:
#           url: http://localhost:15672
#           username: guest
#           password: guest

